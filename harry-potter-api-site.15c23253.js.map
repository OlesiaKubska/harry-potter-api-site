{"mappings":"ACGA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,QAAQ,GAAG,CAAC,gDAEZ,IAAM,EAAM,SAAS,aAAa,CAAC,cAC7B,EAAoB,SAAS,cAAc,CAAC,cAC5C,EAAsB,SAAS,aAAa,CAAC,qBAC7C,EAAgB,SAAS,gBAAgB,CAAC,oBAC1C,EAAuB,SAAS,aAAa,CAAC,uBAC9C,EAAqB,EAAqB,gBAAgB,CAAC,4BAY3D,EAAkB,UACtB,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,8CAC7B,OAAO,MAAM,EAAS,IAAI,EAC5B,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,6BAA8B,GACrC,EAAE,AACX,CACF,EAEM,EAAe,MAAO,IAC1B,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAC,iDAAiD,EAAE,EAAA,CAAO,EACxF,OAAO,MAAM,EAAS,IAAI,EAC5B,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,EAAM,CAAC,CAAC,CAAE,GAClD,EAAE,AACX,CACF,EAEM,EAAmB,AAAC,IACxB,EAAoB,SAAS,CAAG,GAChC,EAAW,OAAO,CAAC,AAAC,IAClB,IAAM,EAAO,SAAS,aAAa,CAAC,OACpC,EAAK,SAAS,CAAC,GAAG,CAAC,0BAEnB,EAAK,SAAS,CAAG;A;AAEH,oBAAA,EAAE,EAAU,KAAK,CAAC,OAAO,EAAE,EAAU,IAAI,CAAC;A;A;AAGb,iDAAA,EAAE,EAAU,IAAI,CAAC;AAClB,gDAAA,EAAE,EAAU,eAAe,EAAE,CAAC,EAAE,EAAI,GAAG;AACtC,iDAAA,EAAE,EAAU,KAAK,CAAC;AACpB,+CAAA,EAAE,EAAU,WAAW,CAAC;AAAK;AACP;AACrC;AAC6D;AAC7C;AACqD;AACpF;AACA;AACN;AACH;AACH,MACC,CAAC,CACD,EAAoB,WAAW,CAAC,EAClC,EACF,EAEA,EAAI,gBAAgB,CAAC,QAAS,KAC5B,EAAkB,SAAS,CAAC,MAAM,CAAC,UACnC,EAAI,QAAQ,CAAG,CAAA,CACjB,GAEA,EAAc,OAAO,CAAC,AAAC,IACrB,EAAO,gBAAgB,CAAC,QAAS,UAC/B,IAAM,EAAQ,EAAO,YAAY,CAAC,cAC5B,EAAa,MAAM,IAErB,EAAkC,EAAE,AAEpC,AAAU,CAAA,aAAV,GACF,EAAqB,EAAW,MAAM,CAAC,AAAC,GAAS,EAAK,eAAe,EACrE,EAAqB,SAAS,CAAC,GAAG,CAAC,WAC1B,AAAU,UAAV,GACT,EAAqB,EAAW,MAAM,CAAC,AAAC,GAAS,EAAK,aAAa,EACnE,EAAqB,SAAS,CAAC,GAAG,CAAC,WAChB,UAAV,IACT,EAAqB,EACrB,EAAqB,SAAS,CAAC,MAAM,CAAC,WAGxC,EAAiB,EACnB,EACF,GAEA,EAAmB,OAAO,CAAC,AAAC,IAC1B,EAAI,gBAAgB,CAAC,QAAS,UAC5B,IAAM,EAAQ,EAAI,YAAY,CAAC,cAC1B,IAGL,EADmB,MAAM,EAAa,IAGtC,EAAmB,OAAO,CAAC,AAAC,GAC1B,EAAE,OAAO,CAAC,8BAA8B,UAAU,OAAO,qCAG3D,EAAI,OAAO,CAAC,8BAA8B,UAAU,IAAI,oCAC1D,EACF,EACF","sources":["<anon>","src/scripts/main.ts"],"sourcesContent":["\n\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    console.log(\"\\uD83E\\uDDD9\\u200D\\u2642\\uFE0F Welcome to the Harry Potter!\");\n    const btn = document.querySelector('.hero__btn');\n    const charactersSection = document.getElementById('characters');\n    const charactersContainer = document.querySelector('.characters-cards');\n    const filterButtons = document.querySelectorAll('.characters__btn');\n    const houseFilterContainer = document.querySelector('.characters-filters');\n    const houseFilterButtons = houseFilterContainer.querySelectorAll('.characters-filters__btn');\n    const fetchCharacters = async ()=>{\n        try {\n            const response = await fetch('https://hp-api.onrender.com/api/characters');\n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching characters:', error);\n            return [];\n        }\n    };\n    const fetchByHouse = async (house)=>{\n        try {\n            const response = await fetch(`https://hp-api.onrender.com/api/characters/house/${house}`);\n            return await response.json();\n        } catch (error) {\n            console.error(`Error fetching characters for ${house}:`, error);\n            return [];\n        }\n    };\n    const renderCharacters = (characters)=>{\n        charactersContainer.innerHTML = '';\n        characters.forEach((character)=>{\n            const card = document.createElement('div');\n            card.classList.add('characters-cards__card');\n            card.innerHTML = `\n        <div class=\"characters-cards__image-wrap\">\n          <img src=\"${character.image}\" alt=\"${character.name}\" class=\"characters-cards__image\" />\n          <div class=\"characters-cards__gradient\">\n            <div class=\"characters-cards__info\">\n              <h3 class=\"characters-cards__name\">${character.name}</h3>\n              <p class=\"characters-cards__desc\">${character.alternate_names?.[0] || ''}</p>\n              <p class=\"characters-cards__house\">${character.house}</p>\n              <p class=\"characters-cards__dob\">${character.dateOfBirth}</p>\n              <button type=\"button\" class=\"characters-cards__button\">\n                \\u{411}\\u{456}\\u{43B}\\u{44C}\\u{448}\\u{435} \\u{456}\\u{43D}\\u{444}\\u{43E}\\u{440}\\u{43C}\\u{430}\\u{446}\\u{456}\\u{457}\n                <svg class=\"characters-cards__icon\" width=\"30\" height=\"20\" viewBox=\"0 0 52 32\">\n                  <circle cx=\"12\" cy=\"12\" r=\"12\" />\n                  <use href=\"#icon-guidance-up\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      `;\n            charactersContainer.appendChild(card);\n        });\n    };\n    btn.addEventListener('click', ()=>{\n        charactersSection.classList.remove('hidden');\n        btn.disabled = true;\n    });\n    filterButtons.forEach((button)=>{\n        button.addEventListener('click', async ()=>{\n            const group = button.getAttribute('data-group');\n            const characters = await fetchCharacters();\n            let filteredCharacters = [];\n            if (group === 'students') {\n                filteredCharacters = characters.filter((char)=>char.hogwartsStudent);\n                houseFilterContainer.classList.add('hidden');\n            } else if (group === 'staff') {\n                filteredCharacters = characters.filter((char)=>char.hogwartsStaff);\n                houseFilterContainer.classList.add('hidden');\n            } else if (group === 'house') {\n                filteredCharacters = characters;\n                houseFilterContainer.classList.remove('hidden');\n            }\n            renderCharacters(filteredCharacters);\n        });\n    });\n    houseFilterButtons.forEach((btn)=>{\n        btn.addEventListener('click', async ()=>{\n            const house = btn.getAttribute('data-house');\n            if (!house) return;\n            const characters = await fetchByHouse(house);\n            renderCharacters(characters);\n            houseFilterButtons.forEach((b)=>b.closest('.characters-filters__item')?.classList.remove('characters-filters__item--active'));\n            btn.closest('.characters-filters__item')?.classList.add('characters-filters__item--active');\n        });\n    });\n});\n\n\n//# sourceMappingURL=harry-potter-api-site.15c23253.js.map\n","import '../scss/main.scss';\r\nimport '../images/svg/icons.svg';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  console.log('üßô‚Äç‚ôÇÔ∏è Welcome to the Harry Potter!');\r\n\r\n  const btn = document.querySelector('.hero__btn') as HTMLButtonElement;\r\n  const charactersSection = document.getElementById('characters') as HTMLElement;\r\n  const charactersContainer = document.querySelector('.characters-cards') as HTMLElement;\r\n  const filterButtons = document.querySelectorAll('.characters__btn');\r\n  const houseFilterContainer = document.querySelector('.characters-filters') as HTMLElement;\r\n  const houseFilterButtons = houseFilterContainer.querySelectorAll('.characters-filters__btn');\r\n\r\n  interface Character {\r\n    name: string;\r\n    image: string;\r\n    house: string;\r\n    hogwartsStudent: boolean;\r\n    hogwartsStaff: boolean;\r\n    dateOfBirth: string;\r\n    alternate_names: string[];\r\n  }\r\n\r\n  const fetchCharacters = async (): Promise<Character[]> => {\r\n    try {\r\n      const response = await fetch('https://hp-api.onrender.com/api/characters');\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error fetching characters:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const fetchByHouse = async (house: string): Promise<Character[]> => {\r\n    try {\r\n      const response = await fetch(`https://hp-api.onrender.com/api/characters/house/${house}`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(`Error fetching characters for ${house}:`, error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const renderCharacters = (characters: Character[]) => {\r\n    charactersContainer.innerHTML = '';\r\n    characters.forEach((character) => {\r\n      const card = document.createElement('div');\r\n      card.classList.add('characters-cards__card');\r\n\r\n      card.innerHTML = `\r\n        <div class=\"characters-cards__image-wrap\">\r\n          <img src=\"${character.image}\" alt=\"${character.name}\" class=\"characters-cards__image\" />\r\n          <div class=\"characters-cards__gradient\">\r\n            <div class=\"characters-cards__info\">\r\n              <h3 class=\"characters-cards__name\">${character.name}</h3>\r\n              <p class=\"characters-cards__desc\">${character.alternate_names?.[0] || ''}</p>\r\n              <p class=\"characters-cards__house\">${character.house}</p>\r\n              <p class=\"characters-cards__dob\">${character.dateOfBirth}</p>\r\n              <button type=\"button\" class=\"characters-cards__button\">\r\n                –ë—ñ–ª—å—à–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó\r\n                <svg class=\"characters-cards__icon\" width=\"30\" height=\"20\" viewBox=\"0 0 52 32\">\r\n                  <circle cx=\"12\" cy=\"12\" r=\"12\" />\r\n                  <use href=\"#icon-guidance-up\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"></use>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n      charactersContainer.appendChild(card);\r\n    });\r\n  };\r\n\r\n  btn.addEventListener('click', () => {\r\n    charactersSection.classList.remove('hidden');\r\n    btn.disabled = true;\r\n  });\r\n\r\n  filterButtons.forEach((button) => {\r\n    button.addEventListener('click', async () => {\r\n      const group = button.getAttribute('data-group');\r\n      const characters = await fetchCharacters();\r\n\r\n      let filteredCharacters: Character[] = [];\r\n\r\n      if (group === 'students') {\r\n        filteredCharacters = characters.filter((char) => char.hogwartsStudent);\r\n        houseFilterContainer.classList.add('hidden');\r\n      } else if (group === 'staff') {\r\n        filteredCharacters = characters.filter((char) => char.hogwartsStaff);\r\n        houseFilterContainer.classList.add('hidden');\r\n      } else if (group === 'house') {\r\n        filteredCharacters = characters;\r\n        houseFilterContainer.classList.remove('hidden');\r\n      }\r\n\r\n      renderCharacters(filteredCharacters);\r\n    });\r\n  });\r\n\r\n  houseFilterButtons.forEach((btn) => {\r\n    btn.addEventListener('click', async () => {\r\n      const house = btn.getAttribute('data-house');\r\n      if (!house) return;\r\n\r\n      const characters = await fetchByHouse(house);\r\n      renderCharacters(characters);\r\n\r\n      houseFilterButtons.forEach((b) =>\r\n        b.closest('.characters-filters__item')?.classList.remove('characters-filters__item--active')\r\n      );\r\n\r\n      btn.closest('.characters-filters__item')?.classList.add('characters-filters__item--active');\r\n    });\r\n  });\r\n});\r\n"],"names":["document","addEventListener","console","log","btn","querySelector","charactersSection","getElementById","charactersContainer","filterButtons","querySelectorAll","houseFilterContainer","houseFilterButtons","fetchCharacters","response","fetch","json","error","fetchByHouse","house","renderCharacters","characters","innerHTML","forEach","character","card","createElement","classList","add","image","name","alternate_names","dateOfBirth","appendChild","remove","disabled","button","group","getAttribute","filteredCharacters","filter","char","hogwartsStudent","hogwartsStaff","b","closest"],"version":3,"file":"harry-potter-api-site.15c23253.js.map"}